"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NCPClient = void 0;
var request_1 = __importDefault(require("request"));
var crypto_1 = __importDefault(require("crypto"));
var NCPClient = /** @class */ (function () {
    /**
     *
     * Constructs an instance of NCPClient.
     *
     * @param phoneNumber 발신 전화번호
     *
     * @param serviceId 프로젝트의 서비스 id
     *
     * @param secretKey 프로젝트 계정의 secretKey
     *
     * @param accessKey 프로젝트 계정의 accessKey
     */
    function NCPClient(options) {
        var phoneNumber = options.phoneNumber, serviceId = options.serviceId, secretKey = options.secretKey, accessKey = options.accessKey;
        this.phoneNumber = phoneNumber;
        this.serviceId = serviceId;
        this.secretKey = secretKey;
        this.accessKey = accessKey;
        this.url = "https://sens.apigw.ntruss.com/sms/v2/services/" + this.serviceId + "/messages";
        this.timestamp = Date.now().toString();
        this.method = 'POST';
        var space = ' ';
        var newLine = '\n';
        var message = [];
        var hmac = crypto_1.default.createHmac('sha256', this.secretKey);
        var url2 = "/sms/v2/services/" + this.serviceId + "/messages";
        message.push(this.method);
        message.push(space);
        message.push(url2);
        message.push(newLine);
        message.push(this.timestamp);
        message.push(newLine);
        message.push(this.accessKey);
        this.signature = hmac.update(message.join('')).digest('base64');
    }
    /**
     *
     * SMS를 보내는 함수
     *
     * @param to 수신 전화번호
     * @param content 전달할 내용
     * @param countryCode 국가 코드 (default 82)
     *
     * @returns Promise any
     *
     */
    NCPClient.prototype.sendSMS = function (to, content, countryCode) {
        var _this = this;
        if (countryCode === void 0) { countryCode = '82'; }
        return new Promise(function (resolve, reject) {
            request_1.default({
                method: _this.method,
                json: true,
                uri: _this.url,
                headers: {
                    'Content-Type': 'application/json; charset=utf-8',
                    'x-ncp-iam-access-key': _this.accessKey,
                    'x-ncp-apigw-timestamp': _this.timestamp,
                    'x-ncp-apigw-signature-v2': _this.signature,
                },
                body: {
                    type: 'SMS',
                    contentType: 'COMM',
                    countryCode: countryCode,
                    from: _this.phoneNumber,
                    content: content,
                    messages: [
                        {
                            to: "" + to,
                        },
                    ],
                },
            }, function (err, res, html) {
                if (!err && res.statusCode === 202) {
                    console.log(html);
                    resolve(true);
                }
                else if (html.error) {
                    console.log(html.error.message + ", " + html.error.details);
                    reject(false);
                }
                else {
                    console.log(err);
                    reject(false);
                }
            });
        }).catch(function (err) {
            console.log(err);
            return false;
        });
    };
    return NCPClient;
}());
exports.NCPClient = NCPClient;
